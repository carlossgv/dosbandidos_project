name: Django CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DOSBANDIDOS_KEY: ${{secrets.DOSBANDIDOS_KEY}}

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]

    services:
      db:
        image: postgres:12.3-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions_testing_db
        ports:
          - 5432:5432
        options: --mount type=tmpfs,destination=/var/lib/postgresql/data --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
      - name: Run tests
        run: python manage.py test
        env:
          SYSTEM_ENV: TESTING_ENV
      # - name: Deploy
      #   run: git push heroku
      #   env:
      #     SYSTEM_ENV: TESTING_ENV

  deploy_to_heroku:
    environment: 'PRODUCTION'
    needs: build_and_test
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Add Heroku remote
        run: git remote add heroku https://git.heroku.com/dos-bandidos.git
      - name: Create Heroku login file
        run: echo ${{secrets.HEROKU_LOGIN}} >> ~/.netrc
      - name: debud netrc
        run: cat ~/.netrc
      - name: Deploy to Heroku
        run: git push heroku main
